#!/bin/sh
#
# Copyright 2009-2010 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if  [ "$1" != "-q" ]; then
  export OPT="-Dgroovyserver.verbose=true"
else
  shift
fi

if [ "x$GROOVY_HOME" = "x" ]; then
  echo "environment variable GROOVY_HOME must be set."
  exit 1;
fi

if [ "$1" = "-k" -o "$1" = "-r" ]; then
  if [ -f ~/.groovy/groovyserver/pid ]; then
    pid=`cat ~/.groovy/groovyserver/pid`
    kill $pid
    echo "kill groovy server $pid"
    rm  ~/.groovy/groovyserver/pid
  else
    echo "pid file ~/.groovy/groovyserver/pid not found"
  fi
  if [ "$1" = "-k" ]; then
    exit
  fi
  echo "restart groovy server"
  shift
fi

if [ -f ~/.groovy/groovyserver/pid ]; then
  pid=`cat ~/.groovy/groovyserver/pid`
  if ! ps -p $pid | grep $pid > /dev/null; then
    rm ~/.groovy/groovyserver/pid
  else
    echo Groovy server already running, pid is `cat ~/.groovy/groovyserver/pid`.
    echo To kill the server, run "groovyserver -k".
    echo If groovy server does not ruuning actually,
    echo retry after removing file ~/.groovy/groovyserver/pid.
    exit
  fi
fi

GROOVYSERV_HOME=`dirname $0`/..

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
linux=false
case "`uname`" in
  CYGWIN* )
    cygwin=true
    ;; 
  Darwin* )
    darwin=true
    ;;
  MINGW* )
    msys=true
    ;;
  Linux* )
    linux=true
    ;;
esac

if $cygwin ; then
  CP=`cygpath --path --mixed "$CP"`
fi

touch ~/.groovy/groovyserver/key
chmod og-rwx ~/.groovy/groovyserver/key
echo $RANDOM$RANDOM$RANDOM$RANDOM$RANDOM > ~/.groovy/groovyserver/key

CP1=$GROOVYSERV_HOME/lib/groovyserv-0.1-SNAPSHOT.jar:$GROOVYSERV_HOME/lib/jna-3.2.2.jar
CP2=$GROOVYSERV_HOME/lib/jna-3.2.2.jar

# $GROOVY_HOME/bin/groovy -cp $CP $OPT -e "org.jggug.kobo.groovyserv.GroovyServer.main(args)" -- "$@" &

#$GROOVY_HOME/bin/groovy -cp $GROOVYSERV_HOME/target/groovyserver-0.1-SNAPSHOT.jar:$CP $OPT -e "org.jggug.kobo.groovyserv.GroovyServer.main(args)" -- "$@" &

#$GROOVY_HOME/bin/groovy -cp $GROOVYSERV_HOME/src/main/groovy:$GROOVYSERV_HOME/target/classes:$GROOVYSERV_HOME/target/groovy-classes:$CP $OPT -e "org.jggug.kobo.groovyserv.GroovyServer.main(args)" -- "$@" &

$GROOVY_HOME/bin/groovy -cp $GROOVYSERV_HOME/src/main/groovy:$GROOVYSERV_HOME/target/classes:$CP2 $OPT -e "org.jggug.kobo.groovyserv.GroovyServer.main(args)" -- "$@" &

pid=$!

SERVER_NOT_RUNNING=15

#`dirname $0`/groovyclient RUOK > /dev/null
#stat=$?
#while [ "$stat" = "$SERVER_NOT_RUNNING" ]; do
#  sleep 1
#  `dirname $0`/groovyclient RUOK > /dev/null
#  stat=$?
#done

if ps -p $pid | grep $pid > /dev/null; then
  echo $pid > ~/.groovy/groovyserver/pid
else
  exit
fi

echo "groovy server $pid is successfully started."

