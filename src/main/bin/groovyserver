#!/bin/sh
#
# Copyright 2009-2010 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#-------------------------------------------
# Setup and Initialize
#-------------------------------------------

if [ "x$GROOVY_HOME" = "x" ]; then
    echo "environment variable GROOVY_HOME must be set."
    exit 1
fi

GROOVYSERV_WORK_DIR=~/.groovy/groovyserv
if [ ! -d "$GROOVYSERV_WORK_DIR" ]; then
    mkdir -p "$GROOVYSERV_WORK_DIR"
fi

PORT=1961
if [ "$GROOVYSERVER_PORT" != "" ]; then
    export PORT=$GROOVYSERVER_PORT
fi

#-------------------------------------------
# Handle arguments
#-------------------------------------------

while [ $# -gt 0 ]; do
    case $1 in
        -q)
            export GROOVYSERV_OPTS="$GROOVYSERV_OPTS -Dgroovyserver.verbose=false"
            shift
            ;;
        -v)
            export GROOVYSERV_OPTS="$GROOVYSERV_OPTS -Dgroovyserver.verbose=true"
            shift
            ;;
        -p)
            shift
            PORT=$1
            export GROOVYSERV_OPTS="$GROOVYSERV_OPTS -Dgroovyserver.port=$PORT"
            shift
            ;;
        -[kr])
            GROOVYSERV_PID_FILE="$GROOVYSERV_WORK_DIR/pid-$PORT"
            if [ -f "$GROOVYSERV_PID_FILE" ]; then
                PID=`cat "$GROOVYSERV_PID_FILE"`
                kill -9 $PID
                echo "kill groovy server $PID($PORT)"
                rm "$GROOVYSERV_PID_FILE"
            else
                echo "pid file $GROOVYSERV_PID_FILE not found"
            fi
            if [ "$1" = "-k" ]; then
                exit 0
            fi
            echo "restart groovy server"
            shift
            ;;
        *)
            echo "Usage: `basename $0` [options]"
            echo "options:"
            echo "  -v       verbose output. print debugging information etc."
            echo "  -q       quiet (default)"
            echo "  -k       kill the running groovyserver"
            echo "  -r       restart groovyserver"
            echo "  -p port  specify the port for groovyserver"
            exit 1
            ;;
    esac
done

#-------------------------------------------
# Check multi invoking
#-------------------------------------------

GROOVYSERV_PID_FILE="$GROOVYSERV_WORK_DIR/pid-$PORT"
if [ -f "$GROOVYSERV_PID_FILE" ]; then
    PID=`cat "$GROOVYSERV_PID_FILE"`
    if ! ps -p $PID | grep $PID > /dev/null; then
        rm "$GROOVYSERV_PID_FILE"
    else
        echo "ERROR: Groovy server already running, pid is $PID."
        echo "To kill the server, run \"groovyserver -k\"."
        echo "If groovy server does not ruuning actually,"
        echo "retry after removing file $GROOVYSERV_PID_FILE."
        exit 1
    fi
fi

#-------------------------------------------
# Invoke server
#-------------------------------------------

GROOVYSERV_HOME=${GROOVYSERV_HOME:-"`dirname $0`/.."}
CP="$GROOVYSERV_HOME/lib/jna-3.2.2.jar"
CP="$GROOVYSERV_HOME/lib/groovyserv-${project.version}.jar:$CP"
CP="$GROOVYSERV_HOME/groovy:$CP"
export CLASSPATH=$CP

nohup "$GROOVY_HOME/bin/groovy" $GROOVYSERV_OPTS "$GROOVYSERV_HOME/groovy/org/jggug/kobo/groovyserv/GroovyServer.groovy" > /dev/null 2>&1 &

#-------------------------------------------
# Store PID
#-------------------------------------------

PID=$!
if ps -p $PID | grep $PID > /dev/null; then
    echo $PID > "$GROOVYSERV_PID_FILE"
else
    echo "ERROR: cannot store PID to file $GROOVYSERV_PID_FILE"
    exit 1
fi

echo "groovy server $PID($PORT) is successfully started."

